{"name":"Client","markup":"markdown","fileName":"/Users/kris/narwhal+node/packages/narwhal-node/lib/narwhal/q-http.js","lineNo":129,"params":[{"name":"port","type":"Number"},{"name":"host","type":"String"}],"errors":[],"throws":[],"see":[],"doc":"Creates an HTTP client for issuing requests to\nthe given host on the given port.","children":[{"name":"request","markup":"markdown","fileName":"/Users/kris/narwhal+node/packages/narwhal-node/lib/narwhal/q-http.js","lineNo":140,"params":[],"errors":["Could not recognize `@param` \"\""],"throws":[],"see":[],"returns":{"type":"Promise * Response","doc":""},"doc":"Issues an HTTP request.  The request may be\nany object that has `method`, `path`, `headers`\nand `body` properties.\n\n* `method` `String` is optional, defaults to `\"GET\"`.\n* `path` `String` is optional, defaults to `\"/\"`.\n* `headers` `Object` is optional, defaults to `{}`.\n* `body` is optional, defaults to `[]`.  Body must\n  be an object with a `forEach` method that accepts a\n  `write` callback.  `forEach` may return a promise,\n  and may send promises to `write`.  `body` may be a\n  promise.\n\nThe Q HTTP `Server` responder receives a `Request`\nobject that is suitable for `request`, and `request`\nreturns a `Response` suitable for returning to the\n`Server`.","heritage":["packages","narwhal-node","narwhal-q-http","_client"],"href":"packages---narwhal-node---narwhal-q-http---_client---request"}],"index":{"request":{"name":"request","markup":"markdown","fileName":"/Users/kris/narwhal+node/packages/narwhal-node/lib/narwhal/q-http.js","lineNo":140,"params":[],"errors":["Could not recognize `@param` \"\""],"throws":[],"see":[],"returns":{"type":"Promise * Response","doc":""},"doc":"Issues an HTTP request.  The request may be\nany object that has `method`, `path`, `headers`\nand `body` properties.\n\n* `method` `String` is optional, defaults to `\"GET\"`.\n* `path` `String` is optional, defaults to `\"/\"`.\n* `headers` `Object` is optional, defaults to `{}`.\n* `body` is optional, defaults to `[]`.  Body must\n  be an object with a `forEach` method that accepts a\n  `write` callback.  `forEach` may return a promise,\n  and may send promises to `write`.  `body` may be a\n  promise.\n\nThe Q HTTP `Server` responder receives a `Request`\nobject that is suitable for `request`, and `request`\nreturns a `Response` suitable for returning to the\n`Server`.","heritage":["packages","narwhal-node","narwhal-q-http","_client"],"href":"packages---narwhal-node---narwhal-q-http---_client---request"}},"heritage":["packages","narwhal-node","narwhal-q-http"],"href":"packages---narwhal-node---narwhal-q-http---_client"}