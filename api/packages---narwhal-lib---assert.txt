{
    "name": "assert",
    "markup": "markdown",
    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
    "lineNo": 12,
    "params": [],
    "errors": [],
    "throws": [],
    "see": [],
    "module": true,
    "doc": "Methods for throwing or logging on failed assertions,\nuseful for unit testing.\n\nAn implementation of the CommonJS Unit Testing 1.0\nSpecification's `assert` module.\n[http://wiki.commonjs.org/wiki/Unit_Testing/1.0](http://wiki.commonjs.org/wiki/Unit_Testing/1.0)",
    "type": "module",
    "id": "assert",
    "children": [
        {
            "name": "AssertionError",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 37,
            "params": [
                {
                    "name": "properties",
                    "type": "string || {message: String, ...}"
                }
            ],
            "errors": [
                "Did not recognize \"instanceof\" tag."
            ],
            "throws": [],
            "see": [],
            "returns": {
                "type": "{name: \"AssertionError\", message: String, \"actual\", \"expected\", \"operator\", ...}",
                "doc": "an error, that may contain backtrace information on Rhino and V8."
            },
            "constructor": true,
            "doc": "Returns an error, that may contain backtrace information on Rhino and V8.",
            "children": [
                {
                    "name": "toString",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 67,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "a representation of the error."
                    },
                    "doc": "Produces a representation like:\n\n* `name: message` or\n* `name: actual == expected`\n\nDepending on whether there is a message, or\nthe comparison operator.\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-string"
                },
                {
                    "name": "toSource",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 98,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "an evaluable representation of the error."
                    },
                    "doc": "Produces an expression like:\n\n    new (require(\"assert\").AssertionError)({\n        \"message\": \"E.T., nach Hause telefonieren.\"\n    })\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-source"
                }
            ],
            "index": {
                "toString": {
                    "name": "toString",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 67,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "a representation of the error."
                    },
                    "doc": "Produces a representation like:\n\n* `name: message` or\n* `name: actual == expected`\n\nDepending on whether there is a message, or\nthe comparison operator.\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-string"
                },
                "toSource": {
                    "name": "toSource",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 98,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "an evaluable representation of the error."
                    },
                    "doc": "Produces an expression like:\n\n    new (require(\"assert\").AssertionError)({\n        \"message\": \"E.T., nach Hause telefonieren.\"\n    })\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-source"
                }
            },
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---_assertion-error"
        },
        {
            "name": "fail",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 128,
            "params": [
                {
                    "name": "options",
                    "doc": "properties for initializing the AssertionError."
                }
            ],
            "errors": [
                "Did not recognize \"see\" tag.",
                "Did not recognize \"see\" tag."
            ],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": ""
                }
            ],
            "see": [],
            "doc": "Called polymorphically by `assert` objects, particularly\nthis assert module, when a test fails.  The behavior of\nthis implementation of `fail` is to throw an `AssertionError`,\nbut by prototypically inheriting the `assert` module, using\n`Object.create` or its ilk, and overriding `fail`, it is possible\nto trivially create variations that log failures rather\nthan throwing.  The `test` module sends such an object to\neach `test*` method in a unit test tree so that tests have\nthe option of logging instead of throwing.  Because each\ntest receives a different `assert` object, the logs are\nassociable with the individual test.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---fail"
        },
        {
            "name": "pass",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 156,
            "params": [
                {
                    "name": "message",
                    "type": "String"
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "Called by the test runner when a test passes.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---pass"
        },
        {
            "name": "error",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 172,
            "params": [
                {
                    "name": "message",
                    "type": "String"
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "Called by the test runner when a test errors out, which\noccurs when a test throws an exception that is not an\n`AssertionError`.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---error"
        },
        {
            "name": "section",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 190,
            "params": [],
            "errors": [],
            "throws": [],
            "see": [],
            "returns": {
                "doc": "this"
            },
            "doc": "Called by the test runner when a test errors begins\na new section of tests and is expected to return an\nobject suitable for sending log messages like `pass`,\n`error`, `fail`, and `section`.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---section"
        },
        {
            "name": "ok",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 215,
            "params": [
                {
                    "name": "value"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if value is not truthy"
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---ok"
        },
        {
            "name": "equal",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 237,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not loosely equal (`!=`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---equal"
        },
        {
            "name": "notEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 261,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are loosely equal (`==`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-equal"
        },
        {
            "name": "deepEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 284,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not deeply equivalent, for their transitive properties."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---deep-equal"
        },
        {
            "name": "notDeepEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 359,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are deeply equivalent, for their transitive properties."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-deep-equal"
        },
        {
            "name": "strictEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 382,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not strictly equal (`!==`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---strict-equal"
        },
        {
            "name": "notStrictEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 405,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are strictly equal (`===`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-strict-equal"
        },
        {
            "name": "throws",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 428,
            "params": [
                {
                    "name": "block",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                },
                {
                    "name": "Error",
                    "type": "Function",
                    "doc": "optional, shifts left by one positional argument if `message` is omitted, or `Error` by default.  @throws {AssertionError} calls the given block and throw an error with the given message if the block does not throw an error of the given type."
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---throws"
        },
        {
            "name": "Assert",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 476,
            "params": [
                {
                    "name": "log",
                    "type": "Log * {pass, fail, error, section}",
                    "doc": "an object, inherited from the assert module itself, that will send messages to the given log object instead of throwing exceptions."
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "constructor": true,
            "returns": {
                "type": "assert",
                "doc": "an object inheriting prototypically from the `assert` module itself, with `pass`, `fail`, `error`, and `section` overridden to forward messages to the given `Log` object."
            },
            "doc": "Constructs a logging `assert` object.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---_assert"
        }
    ],
    "index": {
        "AssertionError": {
            "name": "AssertionError",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 37,
            "params": [
                {
                    "name": "properties",
                    "type": "string || {message: String, ...}"
                }
            ],
            "errors": [
                "Did not recognize \"instanceof\" tag."
            ],
            "throws": [],
            "see": [],
            "returns": {
                "type": "{name: \"AssertionError\", message: String, \"actual\", \"expected\", \"operator\", ...}",
                "doc": "an error, that may contain backtrace information on Rhino and V8."
            },
            "constructor": true,
            "doc": "Returns an error, that may contain backtrace information on Rhino and V8.",
            "children": [
                {
                    "name": "toString",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 67,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "a representation of the error."
                    },
                    "doc": "Produces a representation like:\n\n* `name: message` or\n* `name: actual == expected`\n\nDepending on whether there is a message, or\nthe comparison operator.\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-string"
                },
                {
                    "name": "toSource",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 98,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "an evaluable representation of the error."
                    },
                    "doc": "Produces an expression like:\n\n    new (require(\"assert\").AssertionError)({\n        \"message\": \"E.T., nach Hause telefonieren.\"\n    })\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-source"
                }
            ],
            "index": {
                "toString": {
                    "name": "toString",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 67,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "a representation of the error."
                    },
                    "doc": "Produces a representation like:\n\n* `name: message` or\n* `name: actual == expected`\n\nDepending on whether there is a message, or\nthe comparison operator.\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-string"
                },
                "toSource": {
                    "name": "toSource",
                    "markup": "markdown",
                    "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
                    "lineNo": 98,
                    "params": [],
                    "errors": [],
                    "throws": [],
                    "see": [],
                    "returns": {
                        "doc": "an evaluable representation of the error."
                    },
                    "doc": "Produces an expression like:\n\n    new (require(\"assert\").AssertionError)({\n        \"message\": \"E.T., nach Hause telefonieren.\"\n    })\n\nWARNING: This method is not specified.",
                    "heritage": [
                        "packages",
                        "narwhal-lib",
                        "assert",
                        "_assertion-error"
                    ],
                    "href": "packages---narwhal-lib---assert---_assertion-error---to-source"
                }
            },
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---_assertion-error"
        },
        "fail": {
            "name": "fail",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 128,
            "params": [
                {
                    "name": "options",
                    "doc": "properties for initializing the AssertionError."
                }
            ],
            "errors": [
                "Did not recognize \"see\" tag.",
                "Did not recognize \"see\" tag."
            ],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": ""
                }
            ],
            "see": [],
            "doc": "Called polymorphically by `assert` objects, particularly\nthis assert module, when a test fails.  The behavior of\nthis implementation of `fail` is to throw an `AssertionError`,\nbut by prototypically inheriting the `assert` module, using\n`Object.create` or its ilk, and overriding `fail`, it is possible\nto trivially create variations that log failures rather\nthan throwing.  The `test` module sends such an object to\neach `test*` method in a unit test tree so that tests have\nthe option of logging instead of throwing.  Because each\ntest receives a different `assert` object, the logs are\nassociable with the individual test.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---fail"
        },
        "pass": {
            "name": "pass",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 156,
            "params": [
                {
                    "name": "message",
                    "type": "String"
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "Called by the test runner when a test passes.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---pass"
        },
        "error": {
            "name": "error",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 172,
            "params": [
                {
                    "name": "message",
                    "type": "String"
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "Called by the test runner when a test errors out, which\noccurs when a test throws an exception that is not an\n`AssertionError`.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---error"
        },
        "section": {
            "name": "section",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 190,
            "params": [],
            "errors": [],
            "throws": [],
            "see": [],
            "returns": {
                "doc": "this"
            },
            "doc": "Called by the test runner when a test errors begins\na new section of tests and is expected to return an\nobject suitable for sending log messages like `pass`,\n`error`, `fail`, and `section`.\n\nThis method is inteded to be overridden by inheritors,\nparticularly loggers.  The base implementation is a\nno-op.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---section"
        },
        "ok": {
            "name": "ok",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 215,
            "params": [
                {
                    "name": "value"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if value is not truthy"
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---ok"
        },
        "equal": {
            "name": "equal",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 237,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not loosely equal (`!=`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---equal"
        },
        "notEqual": {
            "name": "notEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 261,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are loosely equal (`==`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-equal"
        },
        "deepEqual": {
            "name": "deepEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 284,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not deeply equivalent, for their transitive properties."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---deep-equal"
        },
        "notDeepEqual": {
            "name": "notDeepEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 359,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are deeply equivalent, for their transitive properties."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-deep-equal"
        },
        "strictEqual": {
            "name": "strictEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 382,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are not strictly equal (`!==`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---strict-equal"
        },
        "notStrictEqual": {
            "name": "notStrictEqual",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 405,
            "params": [
                {
                    "name": "actual"
                },
                {
                    "name": "expected"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                }
            ],
            "errors": [],
            "throws": [
                {
                    "type": "AssertionError",
                    "doc": "an error with the given message if the actual and expected values are strictly equal (`===`)."
                }
            ],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---not-strict-equal"
        },
        "throws": {
            "name": "throws",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 428,
            "params": [
                {
                    "name": "block",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "type": "String",
                    "doc": "optional"
                },
                {
                    "name": "Error",
                    "type": "Function",
                    "doc": "optional, shifts left by one positional argument if `message` is omitted, or `Error` by default.  @throws {AssertionError} calls the given block and throw an error with the given message if the block does not throw an error of the given type."
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "doc": "",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---throws"
        },
        "Assert": {
            "name": "Assert",
            "markup": "markdown",
            "fileName": "/Users/kris/narwhal+node/packages/narwhal-lib/lib/assert.js",
            "lineNo": 476,
            "params": [
                {
                    "name": "log",
                    "type": "Log * {pass, fail, error, section}",
                    "doc": "an object, inherited from the assert module itself, that will send messages to the given log object instead of throwing exceptions."
                }
            ],
            "errors": [],
            "throws": [],
            "see": [],
            "constructor": true,
            "returns": {
                "type": "assert",
                "doc": "an object inheriting prototypically from the `assert` module itself, with `pass`, `fail`, `error`, and `section` overridden to forward messages to the given `Log` object."
            },
            "doc": "Constructs a logging `assert` object.\n\nWARNING: This method is not specified.",
            "heritage": [
                "packages",
                "narwhal-lib",
                "assert"
            ],
            "href": "packages---narwhal-lib---assert---_assert"
        }
    },
    "heritage": [
        "packages",
        "narwhal-lib"
    ],
    "href": "packages---narwhal-lib---assert"
}