{"name":"operator","markup":"markdown","fileName":"/Users/kris/narwhal+node/packages/narwhal-lib/lib/narwhal/util.js","lineNo":16,"params":[],"errors":[],"throws":[],"see":[],"doc":"a decorator for functions that curry \"polymorphically\",\nthat is, that return a function that can be tested\nagainst various objects if they're only \"partially\ncompleted\", or fewer arguments than needed are used.\n\nthis enables the idioms:\n\n    [1, 2, 3].every(lt(4)) eq true\n    [1, 2, 3].map(add(1)) eq [2, 3, 4]\n    [{}, {}, {}].forEach(set('a', 10))","heritage":["packages","narwhal-lib","narwhal-util"],"href":"packages---narwhal-lib---narwhal-util---operator"}